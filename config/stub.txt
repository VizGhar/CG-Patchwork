read incomeEvents:int
loopline incomeEvents incomeTime:int
read patchEvents:int
loopline patchEvents patchTime:int
gameloop
read myButtons:int myTime:int myEarning:int
loop 9 read line:word(9)
read opponentButtons:int opponentTime:int opponentEarning:int
loop 9 read line:word(9)
read patches:int
loop patches read patchId:int patchEarning:int patchButtonPrice:int patchTimePrice:int patchShape:word(20)
read specialPatchId:int
read opponentMoves:int
loop opponentMoves read opponentMove:string(20)
write SKIP

STATEMENT
Become the master of patchworking by filling your quilt canvas with patches. Be careful! Every patch costs you a few Buttons and it also takes some Time to sew it on your canvas.

INPUT
incomeEvents: the amount of "Button income" events that will happen
incomeTime: when the "Button income" will happen
patchEvents: the amount of "Special Patch" events that will happen
patchTime: when the "Special Patch" will happen
patches: count of still not used patches (you can play only one of first 3) 
patchEarning: how much Buttons you will acquire for this patch when "Button income" timepoint is reached
patchButtonPrice: how much Buttons does it cost to buy this patch
patchTimePrice: how much time does it take to sew this patch
patchShape: representation of patch shape "O.O|OOO|O.O" represents H shaped patch
myButtons: how many Buttons you hold right now
myTime: where is my time token placed on timeline
myEarning: how much will you earn during "Button income" phase with your current quilt board
opponentButtons: how many Buttons your opponent holds right now
opponentTime: where is opponent time token placed on timeline
opponentEarning: how much will opponent earn during "Button income" phase with his current quilt board
line: represents row of a board board "O....O.." means, 1st and 6th field is covered by patch on this row
playablePatches: number of patches you can play (3 most of the time, 1 in case of "Special Patch" event)
specialPatchId: 0 if no special patch is available
opponentMoves: how many actions did your opponent played before your moves
opponentMove: action your opponent played